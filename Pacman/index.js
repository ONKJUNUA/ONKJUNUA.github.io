const canvas = document.querySelector('canvas')
const c = canvas.getContext('2d')

const scoreEl = document.querySelector('#scoreEl')
const timeEl = document.querySelector('#timeEl')
const levelEl = document.querySelector('#levelEl')
const livesEl = document.querySelector('#livesEl')

const levelMid = document.querySelector('#levelMid')
const scoreMid = document.querySelector('#scoreMid')

canvas.width = 840;
canvas.height = 840;

class Boundary {
    static width = 40
    static height = 40
    constructor({position, image}){
        this.position=position
        this.width=40
        this.height=40
        this.image=image
    }

    draw() {
        c.drawImage(this.image,this.position.x,this.position.y)
    }
}

class Door {
  static width = 40
  static height = 40
  constructor({position, image}){
      this.position=position
      this.width=40
      this.height=40
      this.image=image
  }

  draw() {
      c.drawImage(this.image,this.position.x,this.position.y)
  }
}

class Player {
    constructor({position,velocity}){
        this.position=position
        this.velocity=velocity
        this.radius= 15
        this.radians = 1
        this.openRate = 0.1
        this.rotation = 0
        this.invincible = false
        this.invincible_points = false
        this.black = false
        this.speed = 5
    }
    draw(){
        c.save()
        c.translate(this.position.x,this.position.y)
        c.rotate(this.rotation)
        c.translate(-this.position.x,-this.position.y)
        c.beginPath()
        c.arc(this.position.x,this.position.y,this.radius,this.radians,Math.PI*2 - this.radians)
        c.lineTo(this.position.x, this.position.y)
        c.fillStyle = this.black ? '#1b1b1b' : this.invincible ? '#808080' : '#FFFFFF'
        c.fill()
        c.closePath()
        c.restore()
    }
    update(){
        this.draw()
        this.position.x+=this.velocity.x
        this.position.y+=this.velocity.y

        if (this.radians < 0 || this.radians > 1) {
          this.openRate = -this.openRate
        }
        this.radians += this.openRate
    }
}

class Ghost {
  static speed = 2
  constructor({position,velocity,eyesad,eyesws}){
      this.position=position
      this.velocity=velocity
      this.radius=14
      this.prevCollisions = []
      this.speed = 2
      this.scared = false
      this.scared_points = false
      this.eyesws = 0
      this.eyesad = 0
  }
  draw(){
    c.save()
      c.beginPath()
      c.fillStyle = this.scared ? '#FFFFFF' : '#808080'
      c.fillRect(this.position.x+this.radius,this.position.y-4,2*-this.radius,this.radius+4)
      c.arc(this.position.x,this.position.y-3,this.radius,0,Math.PI, true)
      c.fill()
      c.closePath()
      c.beginPath()
      c.fillStyle = '#1b1b1b'
      c.arc(this.position.x-6+this.eyesad,this.position.y-3+this.eyesws,4,0,Math.PI*2,true)
      c.arc(this.position.x+6+this.eyesad,this.position.y-3+this.eyesws,4,0,Math.PI*2,true)
      c.fill()
      c.closePath()
      c.beginPath()
      c.fillStyle = '#1b1b1b'
      c.arc(this.position.x-9,this.position.y+14,3,0,Math.PI,true)
      c.arc(this.position.x,this.position.y+14,3,0,Math.PI,true)
      c.arc(this.position.x+9,this.position.y+14,3,0,Math.PI,true)
      c.fill()
      c.closePath()
    c.restore()
  }
  update(){
      this.draw()
      this.position.x+=this.velocity.x
      this.position.y+=this.velocity.y
  }
}

class Smart {
  static speed = 4
  constructor({position,velocity,eyesad,eyesws}){
      this.position=position
      this.velocity=velocity
      this.radius=14
      this.prevCollisions = []
      this.speed = 4
      this.scared = false
      this.scared_points = false
      this.eyesws = 0
      this.eyesad = 0
  }
  draw(){
    c.save()
      c.beginPath()
      c.fillStyle = this.scared ? '#FFFFFF' : '#808080'
      c.fillRect(this.position.x+this.radius,this.position.y-4,2*-this.radius,this.radius+4)
      c.arc(this.position.x,this.position.y-3,this.radius,0,Math.PI, true)
      c.fill()
      c.closePath()
      c.beginPath()
      c.fillStyle = '#1b1b1b'
      c.arc(this.position.x-6+this.eyesad,this.position.y-3+this.eyesws,5,0,Math.PI*2,true)
      c.arc(this.position.x+6+this.eyesad,this.position.y-3+this.eyesws,5,0,Math.PI*2,true)
      c.fill()
      c.closePath()
      c.beginPath()
      c.fillStyle = this.scared ? '#FFFFFF' : '#808080'
      c.arc(this.position.x-6+this.eyesad,this.position.y-3+this.eyesws,2,0,Math.PI*2,true)
      c.arc(this.position.x+6+this.eyesad,this.position.y-3+this.eyesws,2,0,Math.PI*2,true)
      c.fill()
      c.closePath()
      c.beginPath()
      c.fillStyle = '#1b1b1b'
      c.arc(this.position.x-9,this.position.y+14,3,0,Math.PI,true)
      c.arc(this.position.x,this.position.y+14,3,0,Math.PI,true)
      c.arc(this.position.x+9,this.position.y+14,3,0,Math.PI,true)
      c.fill()
      c.closePath()
    c.restore()
  }
  update(){
      this.draw()
      this.position.x+=this.velocity.x
      this.position.y+=this.velocity.y
  }
}

class Palet {
    constructor({position}){
        this.position=position
        this.radius=4
        this.black = false
    }
    draw(){
        c.beginPath()
        c.arc(this.position.x,this.position.y,this.radius,0,Math.PI*2)
        c.fillStyle = this.black ? '#1b1b1b' : '#FFFFFF'
        c.fill()
        c.closePath()
    }
}

class Powerup {
  constructor({position}){
      this.position=position
      this.radius=10
  }
  draw(){
    c.beginPath()
    c.arc(this.position.x,this.position.y,this.radius,0,Math.PI*2)
    c.fillStyle='#FFFFFF'
    c.fill()
    c.closePath()
    c.beginPath()
    c.arc(this.position.x,this.position.y,6,0,Math.PI*2)
    c.fillStyle='#1b1b1b'
    c.fill()
    c.closePath()
  }
}

class Heartup {
  constructor({position}){
      this.position=position
      this.radius=6
  }
  draw(){
      c.beginPath()
      c.arc(this.position.x-5,this.position.y-3,this.radius,0,Math.PI*2,true)
      c.arc(this.position.x,this.position.y,this.radius,0,Math.PI*2,true)
      c.arc(this.position.x+5,this.position.y-3,this.radius,0,Math.PI*2,true)
      c.moveTo(this.position.x,this.position.y+11)
      c.lineTo(this.position.x+10,this.position.y+1)
      c.lineTo(this.position.x-10,this.position.y+1)
      c.fillStyle='#FFFFFF'
      c.fill()
      c.closePath()
  }
}

class Fastup {
  constructor({position}){
      this.position=position
      this.radius=10
  }
  draw(){
      c.beginPath()
      c.moveTo(this.position.x,this.position.y-5)
      c.lineTo(this.position.x+10,this.position.y+10)
      c.lineTo(this.position.x-10,this.position.y+10)
      c.fillStyle='#FFFFFF'
      c.fill()
      c.closePath()
      c.beginPath()
      c.moveTo(this.position.x,this.position.y+5)
      c.lineTo(this.position.x+10,this.position.y-10)
      c.lineTo(this.position.x-10,this.position.y-10)
      c.fillStyle='#FFFFFF'
      c.fill()
      c.closePath()
      c.beginPath()
      c.moveTo(this.position.x,this.position.y-1)
      c.lineTo(this.position.x+5,this.position.y-7)
      c.lineTo(this.position.x-5,this.position.y-7)
      c.moveTo(this.position.x,this.position.y+1)
      c.lineTo(this.position.x+5,this.position.y+7)
      c.lineTo(this.position.x-5,this.position.y+7)
      c.fillStyle='#1b1b1b'
      c.fill()
      c.closePath()
  }
}

class Inviup {
  constructor({position}){
      this.position=position
      this.radius=12
  }
  draw(){
    c.beginPath()
      c.arc(this.position.x,this.position.y,this.radius,0,Math.PI*2)
      c.fillStyle='#1b1b1b'
      c.fill()
      c.closePath()
      c.beginPath()
      c.fillStyle='#FFFFFF'
      c.fillRect(this.position.x-12,this.position.y-10,25,3)
      c.fillRect(this.position.x-12,this.position.y-2,25,3)
      c.fillRect(this.position.x-12,this.position.y+6,25,3)
      c.fill()
      c.closePath()
  }
}

class KeyVer {
  constructor({position}){
      this.position=position
      this.radius=8
  }
  draw(){
    c.beginPath()
    c.fillStyle='#FFFFFF'
    c.arc(this.position.x-6,this.position.y,this.radius,0,Math.PI*2)
    c.fillRect(this.position.x-8,this.position.y-2,20,5)
    c.fillRect(this.position.x+6,this.position.y-2,4,8)
    c.fill()
    c.closePath()
    c.beginPath()
    c.arc(this.position.x-6,this.position.y,4,0,Math.PI*2)
    c.fillStyle='#1b1b1b'
    c.fill()
    c.closePath()
  }
}

class Teleport {
  constructor({position}){
      this.position=position
      this.radius=8
      this.recharge=false
      this.recharge_points=false
  }
  draw(){
    c.beginPath()
    c.moveTo(this.position.x-15,this.position.y)
    c.lineTo(this.position.x,this.position.y-15)
    c.lineTo(this.position.x,this.position.y+15)
    c.fillStyle = this.recharge ? '#808080' : '#FFFFFF'
    c.fill()
    c.closePath()
    c.beginPath()
    c.moveTo(this.position.x+15,this.position.y)
    c.lineTo(this.position.x,this.position.y-15)
    c.lineTo(this.position.x,this.position.y+15)
    c.fillStyle = this.recharge ? '#808080' : '#FFFFFF'
    c.fill()
    c.closePath()
    c.beginPath()
    c.fillStyle = this.recharge ? '#808080' : '#FFFFFF'
    c.fillRect(this.position.x-10,this.position.y-10,20,20)
    c.fill()
    c.closePath()

    c.beginPath()
    c.moveTo(this.position.x-10,this.position.y)
    c.lineTo(this.position.x,this.position.y-10)
    c.lineTo(this.position.x,this.position.y+10)
    c.fillStyle='#1b1b1b'
    c.fill()
    c.closePath()
    c.beginPath()
    c.moveTo(this.position.x+10,this.position.y)
    c.lineTo(this.position.x,this.position.y-10)
    c.lineTo(this.position.x,this.position.y+10)
    c.fillStyle='#1b1b1b'
    c.fill()
    c.closePath()
    c.beginPath()
    c.fillStyle='#1b1b1b'
    c.fillRect(this.position.x-7.5,this.position.y-7.5,15,15)
    c.fill()
    c.closePath()
  }
}


const palets = []
const boundaries = []
const doors = []
const powerups = []
const heartups = []
const fastups = []
const inviups = []
const keyvers = []
const teleports = []
const ghosts = [
    new Ghost({
      position: 
      {x:Boundary.width * 19 + Boundary.width/2,
      y:Boundary.height + Boundary.height/2},
      velocity: {x:-Ghost.speed,y:0}
    }),
    new Ghost({
      position: 
      {x:Boundary.width * 19 + Boundary.width/2,
      y:Boundary.height * 19 + Boundary.height/2},
      velocity: {x:-Ghost.speed,y:0}
    }),
    new Ghost({
      position: 
      {x:Boundary.width + Boundary.width/2,
      y:Boundary.height * 19 + Boundary.height/2},
      velocity: {x:Ghost.speed,y:0}
    })
  ]
const player = new Player({
      position: {
          x:Boundary.width + Boundary.width/2,
          y:Boundary.height + Boundary.height/2
      },
      velocity: {
          x:0,
          y:0
      }
  })
const keys = {
    w:{
        pressed:false
    },
    a:{
        pressed:false
    },
    s:{
        pressed:false
    },
    d:{
        pressed:false
    }
}

let lastKey = ''
let lastKeyws = ''
let lastKeyad = ''

let score = 0
let time = 150000
let lives = 7
let level = 1
let time_level = 1
let fake_value = false

const map7 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','h','|'],
['|','.','1','-','-','-',']','.','[','-','-','-',']','.','[','-','-','-','2','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','_','.','b','.','1',']','.','b','.','b','.','[','2','.','b','.','_','.','|'],
['|','.','.','.','.','.','_','.','.','.','.','.','.','.','_','.','.','.','.','.','|'],
['|','.','^','.','b','.','.','.','b','.','b','.','b','.','.','.','b','.','^','.','|'],
['|','.','|','.','.','.','b','.','.','.','.','.','.','.','b','.','.','.','|','.','|'],
['|','.','|','.','b','.','.','.','b','.','b','.','b','.','.','.','b','.','|','.','|'],
['|','.','|','.','.','.','b','.','.','.','.','.','.','.','b','.','.','.','|','.','|'],
['|','.','_','.','b','.','.','.','b','.','b','.','b','.','.','.','b','.','_','.','|'],
['|','.','.','.','.','.','^','.','.','.','.','.','.','.','^','.','.','.','.','.','|'],
['|','.','^','.','b','.','4',']','.','b','.','b','.','[','3','.','b','.','^','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','4','-','-','-',']','.','[','-','-','-',']','.','[','-','-','-','3','.','|'],
['|','p','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','f','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map2 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','1','-','-','-','-','-','-',']','.','[','-','-','-','-','-','-','2','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','|','.','1','-','-','-','-',']','.','[','-','-','-','-','2','.','|','.','|'],
['|','.','|','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','|','.','|'],
['|','.','|','.','|','.','1','-','-',']','.','[','-','-','2','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','.','.','.','.','.','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','1',']','.','[','2','.','|','.','|','.','|','.','|'],
['|','.','_','.','_','.','_','.','_','.','.','.','_','.','_','.','_','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','b','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','^','.','^','.','^','.','.','.','^','.','^','.','^','.','^','.','|'],
['|','.','|','.','|','.','|','.','4',']','.','[','3','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','.','.','.','.','.','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','4','-','-',']','.','[','-','-','3','.','|','.','|','.','|'],
['|','.','|','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','|','.','|'],
['|','.','|','.','4','-','-','-','-',']','.','[','-','-','-','-','3','.','|','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','4','-','-','-','-','-','-',']','.','[','-','-','-','-','-','-','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','f','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map8 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','f','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','b','.','|'],
['|','p','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','i','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map4 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','|'],
['|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|'],
['|','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|'],
['|','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','|'],
['|','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','|'],
['|','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','|'],
['|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|'],
['|','.','h','.','|','.','.','.','|','.','p','.','|','.','.','.','|','.','h','.','|'],
['|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|'],
['|','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','|'],
['|','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','|'],
['|','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','|'],
['|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|','.','_','.','|'],
['|','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|','.','^','.','|'],
['|','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map5 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','1',']','.','[','7',']','.','[','7',']','.','[','7',']','.','[','2','.','|'],
['|','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','|'],
['|','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','|'],
['|','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','|'],
['|','.','6',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','8','.','|'],
['|','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','|'],
['|','.','.','.','b','.','.','.','b','.','p','.','b','.','.','.','b','.','.','.','|'],
['|','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','|'],
['|','.','6',']','.','[','+',']','i','[','+',']','f','[','+',']','.','[','8','.','|'],
['|','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','|'],
['|','.','.','.','b','.','.','.','b','.','h','.','b','.','.','.','b','.','.','.','|'],
['|','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','|'],
['|','.','6',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','8','.','|'],
['|','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','|'],
['|','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','|'],
['|','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','|'],
['|','.','4',']','.','[','5',']','.','[','5',']','.','[','5',']','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map6 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','i','.','.','.','.','.','.','.','.','.','|'],
['|','.','1',']','.','^','.','^','.','^','.','^','.','^','.','^','.','[','2','.','|'],
['|','.','_','.','.','|','.','|','.','|','.','|','.','|','.','|','.','.','_','.','|'],
['|','.','.','.','1','3','.','|','.','|','.','|','.','|','.','4','2','.','.','.','|'],
['|','.','[','-','3','.','.','|','.','|','.','|','.','|','.','.','4','-',']','.','|'],
['|','.','.','.','.','.','1','3','.','|','.','|','.','4','2','.','.','.','.','.','|'],
['|','.','[','-','-','-','3','.','.','|','.','|','.','.','4','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','1','3','.','4','2','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-','-','-','3','.','.','.','4','-','-','-','-','-',']','.','|'],
['|','f','.','.','.','.','.','.','.','.','b','.','.','.','.','.','.','.','.','p','|'],
['|','.','[','-','-','-','-','-','2','.','.','.','1','-','-','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','4','2','.','1','3','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-','2','.','.','|','.','|','.','.','1','-','-','-',']','.','|'],
['|','.','.','.','.','.','4','2','.','|','.','|','.','1','3','.','.','.','.','.','|'],
['|','.','[','-','2','.','.','|','.','|','.','|','.','|','.','.','1','-',']','.','|'],
['|','.','.','.','4','2','.','|','.','|','.','|','.','|','.','1','3','.','.','.','|'],
['|','.','^','.','.','|','.','|','.','|','.','|','.','|','.','|','.','.','^','.','|'],
['|','.','4',']','.','_','.','_','.','_','.','_','.','_','.','_','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','h','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map1 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-','-',']','.','[','-','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-',']','.','[','-','-','-',']','.','[','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-','-',']','.','[','-','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-',']','.','[','-','-','-',']','.','[','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-','-',']','p','[','-','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-',']','.','[','-','-','-',']','.','[','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-','-',']','.','[','-','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-',']','.','[','-','-','-',']','.','[','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-','-',']','.','[','-','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map3 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-','-','-','-',']','.','[','-','-','-','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','|'],
['|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|'],
['|','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-','-','-','-',']','i','[','-','-','-','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','|'],
['|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|','.','|'],
['|','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-','-','-','-','-','-',']','.','[','-','-','-','-','-','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map12 = [
['1','-','-','-','7','-','-','-','7','-','-','-','7','-','-','-','7','-','-','-','2'],
['|',' ','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','p','|'],
['|','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','|'],
['|','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','|'],
['6',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','8'],
['|','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','|'],
['|','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','|'],
['|','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','|'],
['6',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','8'],
['|','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','|'],
['|','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','|'],
['|','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','|'],
['6',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','8'],
['|','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','|'],
['|','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','|'],
['|','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','.','|'],
['6',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','+',']','.','[','8'],
['|','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','_','.','.','.','|'],
['|','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','.','.','b','.','|'],
['|','h','.','.','^','.','.','.','^','.','.','.','^','.','.','.','^','.','.','f','|'],
['4','-','-','-','5','-','-','-','5','-','-','-','5','-','-','-','5','-','-','-','3']
]

const map10 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','[','-',']','.','b','.','b','.','b','.','[','-',']','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','b','.','b','.','[','-','-','-',']','.','b','.','b','.','^','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','_','.','b','.','1',']','.','b','.','b','.','[','2','.','b','.','_','.','|'],
['|','.','.','.','.','.','_','.','.','.','.','.','.','.','_','.','.','.','.','.','|'],
['|','.','b','.','^','.','.','.','1',']','.','[','2','.','.','.','^','.','b','.','|'],
['|','.','.','.','|','.','b','.','_','.','.','.','_','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','.','p','b','h','.','.','.','.','|','.','b','.','|'],
['|','.','.','.','|','.','b','.','^','.','.','.','^','.','b','.','|','.','.','.','|'],
['|','.','b','.','_','.','.','.','4',']','.','[','3','.','.','.','_','.','b','.','|'],
['|','.','.','.','.','.','^','.','.','.','.','.','.','.','^','.','.','.','.','.','|'],
['|','.','^','.','b','.','4',']','.','b','.','b','.','[','3','.','b','.','^','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','_','.','b','.','b','.','[','-','-','-',']','.','b','.','b','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','[','-',']','.','b','.','b','.','b','.','[','-',']','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','f','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map11 = [
['1','-','-','-','-','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-',']','.','|','.','[','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','^','.','b','.','_','.','b','.','^','.','[','-',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','|'],
['|','.','[','-','-','-','+',']','.','[','7',']','.','[','+','-','-','-',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','_','.','.','.','|','.','.','.','.','.','|'],
['6','-','-','-',']','.','|','.','^','.','.','.','^','.','|','.','[','-','-','-','8'],
['|','.','.','.','.','.','|','.','_','.','b','.','_','.','|','.','.','.','.','.','|'],
['|','f','[','-',']','.','|','.','.','.','p','.','.','.','|','.','[','-',']','h','|'],
['|','.','.','.','.','.','|','.','^','.','b','.','^','.','|','.','.','.','.','.','|'],
['6','-','-','-',']','.','|','.','_','.','.','.','_','.','|','.','[','-','-','-','8'],
['|','.','.','.','.','.','|','.','.','.','^','.','.','.','|','.','.','.','.','.','|'],
['|','.','[','-','-','-','+',']','.','[','5',']','.','[','+','-','-','-',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','|'],
['|','.','[','-',']','.','_','.','b','.','^','.','b','.','_','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','[','-',']','.','|','.','[','-',']','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','5','-','-','-','-','-','-','-','-','-','3']
]

const map9 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','f','|'],
['|','.','1','-',']','.','^','.','[','-','-','-',']','.','^','.','[','-','2','.','|'],
['|','.','|','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','|','.','|'],
['|','.','_','.','b','.','_','.','[','-','-','-',']','.','_','.','b','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','b','.','^','.','^','.','^','.','b','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','.','.','|'],
['|','.','^','.','^','.','[','-','3','.','_','.','4','-',']','.','^','.','^','.','|'],
['|','.','|','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','|','.','|'],
['|','.','|','.','|','.','[','-',']','.','b','.','[','-',']','.','|','.','|','.','|'],
['|','.','|','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','|','.','|'],
['|','.','_','.','_','.','[','-','2','.','^','.','1','-',']','.','_','.','_','.','|'],
['|','.','.','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','b','.','_','.','_','.','_','.','b','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','b','.','^','.','[','-','-','-',']','.','^','.','b','.','^','.','|'],
['|','.','|','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','|','.','|'],
['|','.','4','-',']','.','_','.','[','-','-','-',']','.','_','.','[','-','3','.','|'],
['|','i','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','p','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map13 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','.','.','_','.','.','.','.','.','.','.','|'],
['|','.','[',']','.','[',']','.','.','.','^','.','.','.','[',']','.','[',']','.','|'],
['|','.','.','.','.','.','.','.','[','-','+','-',']','.','.','.','.','.','.','.','|'],
['|','.','[',']','.','[',']','.','.','.','_','.','.','.','[',']','.','[',']','.','|'],
['|','.','.','.','.','.','.','.','^','.','k','.','^','.','.','.','.','.','.','.','|'],
['6','-','-','-','-','-','-','-','5','2','d','1','5','-','-','-','-','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','|','.','|','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','[',']','.','^','.','|','.','|','.','^','.','[',']','.','^','.','|'],
['|','.','|','.','.','.','.','|','.','_','.','_','.','|','.','.','.','.','|','.','|'],
['|','k','|','.','[',']','.','|','.','t','k','t','.','|','.','[',']','.','|','k','|'],
['|','.','|','.','.','.','.','|','.','^','.','^','.','|','.','.','.','.','|','.','|'],
['|','.','_','.','[',']','.','_','.','|','.','|','.','_','.','[',']','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','|','.','|','.','.','.','.','.','.','.','.','|'],
['6','-','-','-','-','-','-','-','-','3','d','4','-','-','-','-','-','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','^','.','b','.','^','.','b','.','^','.','b','.','^','.','b','.','|'],
['|','.','h','.','|','.','.','.','|','.','p','.','|','.','.','.','|','.','f','.','|'],
['|','.','b','.','_','.','b','.','_','.','b','.','_','.','b','.','_','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map14 = [
['1','-','-','-','-','-','7','-','-','-','-','-','-','-','7','-','-','-','-','-','2'],
['|',' ','.','.','.','.','|','.','.','.','p','.','.','.','|','.','.','.','.','.','|'],
['|','.','b','.','b','.','_','.','^','.','b','.','^','.','_','.','b','.','b','.','|'],
['|','.','.','.','.','.','t','.','|','.','k','.','|','.','t','.','.','k','.','.','|'],
['|','.','b','.','b','.','^','.','_','.','b','.','_','.','^','.','b','.','b','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','|'],
['6','-',']','.','[','-','+','-','-',']','d','[','-','-','+','-',']','d','[','-','8'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','|'],
['|','.','[','-',']','.','|','.','b','.','^','.','b','.','|','.','[','-',']','.','|'],
['|','.','.','.','.','.','_','.','.','k','|','k','.','.','_','.','.','.','.','.','|'],
['|','.','b','k','b','.','t','.','[','-','+','-',']','.','t','.','b','k','b','.','|'],
['|','.','.','.','.','.','^','.','.','k','|','k','.','.','^','.','.','.','.','.','|'],
['|','.','[','-',']','.','|','.','b','.','_','.','b','.','|','.','[','-',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','|'],
['6','-',']','d','[','-','+','-','-',']','d','[','-','-','+','-',']','d','[','-','8'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','|'],
['|','.','b','.','b','.','_','.','^','.','b','.','^','.','_','.','b','.','b','.','|'],
['|','.','.','k','.','.','t','.','|','.','.','.','|','.','t','.','.','.','.','.','|'],
['|','.','b','.','b','.','^','.','_','.','b','.','_','.','^','.','b','.','b','.','|'],
['|','.','.','.','.','.','|','.','.','.','f','.','.','.','|','.','.','.','.','.','|'],
['4','-','-','-','-','-','5','-','-','-','-','-','-','-','5','-','-','-','-','-','3']
]

const map15 = [
  ['1','-','-','-','7','-','-','-','-','-','7','-','-','-','-','-','7','-','-','-','2'],
  ['|',' ','.','.','|','.','.','k','.','.','|','.','.','.','.','.','|','.','.','.','|'],
  ['|','.','^','.','|','.','[','-',']','.','|','.','[','-',']','.','|','.','^','.','|'],
  ['|','.','|','.','|','.','.','i','.','.','|','.','.','f','.','.','|','.','|','.','|'],
  ['|','.','_','.','|','.','[','-',']','.','|','.','[','-',']','.','|','.','_','.','|'],
  ['|','.','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','.','|'],
  ['6',']','.','[','+',']','.','b','.','[','+',']','.','b','.','[','+',']','.','[','8'],
  ['|','.','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','.','|'],
  ['|','.','^','.','|','.','^','.','^','.','|','.','^','.','^','.','|','.','^','.','|'],
  ['|','.','|','.','_','.','_','.','_','.','_','.','_','.','_','.','_','.','|','.','|'],
  ['|','.','|','.','t','.','.','.','.','.','t','.','.','.','.','.','t','.','|','.','|'],
  ['|','.','|','.','^','.','^','.','^','.','^','.','^','.','^','.','^','.','|','.','|'],
  ['|','.','_','.','|','.','_','.','_','.','|','.','_','.','_','.','|','.','_','.','|'],
  ['|','.','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','.','|'],
  ['6',']','.','[','+',']','.','b','.','[','+',']','.','b','.','[','+',']','.','[','8'],
  ['|','.','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','.','|'],
  ['|','.','^','.','|','.','[','-',']','.','|','.','[','-',']','.','|','.','^','.','|'],
  ['|','.','|','.','|','.','.','h','.','.','|','.','.','p','.','.','|','.','|','.','|'],
  ['|','.','_','.','|','.','[','-',']','.','|','.','[','-',']','.','|','.','_','.','|'],
  ['|','.','k','.','|','.','.','.','.','.','|','.','.','k','.','.','|','.','.','.','|'],
  ['4','-','-','-','5','-','-','-','-','-','5','-','-','-','-','-','5','-','-','-','3']
  ]

const map16 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','t','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','[','7',']','.','b','.','^','.','1','-',']','.','[','-','2','.','|'],
['|','.','.','.','.','_','.','.','.','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','[',']','.','p','.','[',']','.','|','.','_','.','b','.','b','.','_','.','|'],
['|','.','.','.','.','b','.','.','.','.','|','.','.','.','.','k','.','.','.','.','|'],
['|','.','[',']','.','k','.','[',']','.','|','.','^','.','b','.','b','.','^','.','|'],
['|','.','.','.','.','^','.','.','.','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','b','.','[','5',']','.','b','.','|','.','4','-',']','.','[','-','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','d','[','-','-','-','-','-','-','-','+','-','-','-','-','-','-','-',']','d','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','^','.','^','.','b','.','|','.','b','.','^','.','^','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','|','.','.','.','_','.','_','.','.','.','|'],
['|','.','[','-','3','.','4','-',']','.','|','.','^','.','.','h','.','.','^','.','|'],
['|','.','.','.','.','k','.','.','.','.','|','.','6',']','.','b','.','[','8','.','|'],
['|','.','[','-','2','.','1','-',']','.','|','.','_','.','.','.','.','.','_','.','|'],
['|','.','.','.','|','.','|','.','.','.','|','.','.','.','^','.','^','.','.','.','|'],
['|','.','b','.','_','.','_','.','b','.','_','.','b','.','_','.','_','.','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','t','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map17 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','_','.','1','-','-',']','d','[','-',']','d','[','-','-','2','.','_','.','|'],
['|','k','t','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','t','k','|'],
['|','.','^','.','|','.','1','-','-','-','-','-','-','-','2','.','|','.','^','.','|'],
['|','.','|','.','|','.','|','.','.','.','.','.','.','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','b','.','^','.','b','.','|','.','|','.','|','.','|'],
['|','.','_','.','|','.','_','.','.','p','|','i','.','.','_','.','|','.','_','.','|'],
['|','k','t','.','|','.','t','.','[','-','+','-',']','.','t','.','|','.','t','k','|'],
['|','.','^','.','|','.','^','.','.','f','|','h','.','.','^','.','|','.','^','.','|'],
['|','.','|','.','|','.','|','.','b','.','_','.','b','.','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','.','.','.','.','.','.','|','.','|','.','|','.','|'],
['|','.','_','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','_','.','|'],
['|','k','t','.','|','k','.','.','.','.','.','.','.','.','.','k','|','.','t','k','|'],
['|','.','^','.','4','-','-',']','d','[','-',']','d','[','-','-','3','.','^','.','|'],
['|','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','|'],
['|','.','4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map18 = [
['1','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','_','.','[',']','.','[',']','.','[',']','.','[',']','.','|'],
['|','.','.','k','.','.','t','.','.','.','.','.','.','.','.','.','f','.','.','k','|'],
['|','.','b','.','b','.','^','.','[',']','.','[',']','.','[',']','.','[',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['6','-',']','d','[','-','+','-','-','-','-','-','-','-','-','-','-','-','-','-','8'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','^','.','|','.','1','-','-','-','-','-','-','-','-','-','2','.','|'],
['|','.','_','.','_','.','_','.','|','.','.','.','.','.','.','.','.','.','_','.','|'],
['|','.','.','k','.','.','t','.','|','k','b','.','[','-',']','p','b','.','.','.','|'],
['|','.','^','.','^','.','^','.','|','.','.','.','.','.','.','.','.','.','^','.','|'],
['|','.','_','.','_','.','|','.','4','-','-','-','-','-','-','-','-','-','3','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['6','-',']','d','[','-','+','-','-','-','-','-','-','-','-','-','-','-','-','-','8'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','b','.','_','.','[',']','.','[',']','.','[',']','.','[',']','.','|'],
['|','.','.','k','.','.','t','.','.','.','.','.','.','.','.','.','h','.','.','.','|'],
['|','.','b','.','b','.','^','.','[',']','.','[',']','.','[',']','.','[',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','5','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map19 = [
['1','-','-','-','-','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','i','|','f','.','.','.','.','.','.','.','k','|'],
['|','.','[','-','-','7','-','-',']','.','|','.','[','-','-','7','-','-',']','.','|'],
['|','.','.','.','.','|','.','.','.','.','|','.','.','.','.','|','.','.','.','.','|'],
['6',']','.','^','.','|','.','1','2','.','|','.','1','2','.','|','.','^','.','[','8'],
['|','.','.','|','.','|','.','4','3','.','|','.','4','3','.','|','.','|','.','.','|'],
['|','.','[','3','.','_','.','.','.','.','|','.','.','.','.','_','.','4',']','.','|'],
['|','.','.','.','.','.','.','1','-','-','5','-','-','2','.','.','.','.','.','.','|'],
['6','-','-','-','-',']','.','|','.','.','.','.','.','|','.','[','-','-','-','-','8'],
['|','.','.','.','.','.','.','_','.','b','.','b','.','_','.','.','.','.','.','.','|'],
['|','.','[','-','-',']','.','t','.','.','p','.','.','t','.','[','-','-',']','.','|'],
['|','.','.','.','.','.','.','^','.','b','.','b','.','^','.','.','.','.','.','.','|'],
['6','-','-','-','-',']','.','|','.','.','.','.','.','|','.','[','-','-','-','-','8'],
['|','.','.','.','.','.','.','4','-','-','7','-','-','3','.','.','.','.','.','.','|'],
['|','.','[','2','.','^','.','.','.','.','|','.','.','.','.','^','.','1',']','.','|'],
['|','.','.','|','.','|','.','1','2','.','|','.','1','2','.','|','.','|','.','.','|'],
['6',']','.','_','.','|','.','4','3','.','|','.','4','3','.','|','.','_','.','[','8'],
['|','.','.','.','.','|','.','.','.','.','|','.','.','.','.','|','.','.','.','.','|'],
['|','.','[','-','-','5','-','-',']','.','|','.','[','-','-','5','-','-',']','.','|'],
['|','l','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','l','|'],
['4','-','-','-','-','-','-','-','-','-','5','-','-','-','-','-','-','-','-','-','3']
]

const map20 = [
['1','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','i','|'],
['|','.','^','.','[',']','.','^','.','b','.','b','.','^','.','[',']','.','^','.','|'],
['|','.','|','.','.','.','.','|','.','.','l','.','.','|','.','.','.','.','|','.','|'],
['|','.','_','.','[',']','.','_','.','b','.','b','.','_','.','[',']','.','_','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','p','.','.','.','.','.','.','.','.','.','|'],
['|','.','[','-',']','.','1','-',']','.','^','.','[','-','2','.','[','-',']','.','|'],
['|','.','.','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','.','.','|'],
['|','.','b','.','b','.','|','.','[','-','+','-',']','.','|','.','b','.','b','.','|'],
['|','.','.','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','.','.','|'],
['|','.','[','-',']','.','4','-',']','.','_','.','[','-','3','.','[','-',']','.','|'],
['|','.','.','.','.','.','.','.','.','.','h','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-','-','-','-','-','-',']','d','[','-','-','-','-','-','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['|','.','^','.','[',']','.','^','.','b','.','b','.','^','.','[',']','.','^','.','|'],
['|','.','|','.','.','.','.','|','.','.','l','.','.','|','.','.','.','.','|','k','|'],
['|','.','_','.','[',']','.','_','.','b','.','b','.','_','.','[',']','.','_','.','|'],
['|','f','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map21 = [
['1','-','-','-','-','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','f','|'],
['|','.','1','-','-','-','-','-','2','.','|','.','1','-',']','.','[','-','2','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','_','.','^','.','^','.','_','.','|','.','|','.','[','-',']','.','|','.','|'],
['|','.','.','.','|','l','|','.','.','.','|','.','|','.','.','p','.','.','|','.','|'],
['|','.','^','.','_','.','_','.','^','.','|','.','|','.','[','-',']','.','|','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','4','-','-','-','-','-','3','.','|','.','4','-',']','.','[','-','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-',']','d','[','-','-','-','+','-','-','-',']','d','[','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','.','1','-',']','.','[','-','2','.','|','.','1','-','-','-','-','-','2','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','|','.','[','-',']','.','|','.','|','.','_','.','^','.','^','.','_','.','|'],
['|','.','|','.','.','k','.','.','|','.','|','.','.','.','|','l','|','.','.','.','|'],
['|','.','|','.','[','-',']','.','|','.','|','.','^','.','_','.','_','.','^','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','4','-',']','.','[','-','3','.','|','.','4','-','-','-','-','-','3','.','|'],
['|','i','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','k','|'],
['4','-','-','-','-','-','-','-','-','-','5','-','-','-','-','-','-','-','-','-','3']
]

const map22 = [
['1','-','-','-','-','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','.','b','.','[','-',']','.','b','l','|','l','b','.','[','-',']','.','b','k','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-',']','d','[','-','-','-','+','-','-','-',']','d','[','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','k','b','f','[','-',']','.','b','.','|','.','b','.','[','-',']','i','b','k','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-',']','d','[','-','-','-','+','-','-','-',']','d','[','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','k','b','f','[','-',']','.','b','.','|','.','b','.','[','-',']','p','b','k','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-',']','d','[','-','-','-','+','-','-','-',']','d','[','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','k','b','f','[','-',']','.','b','.','|','.','b','.','[','-',']','i','b','k','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['6','-','-','-',']','d','[','-','-','-','+','-','-','-',']','d','[','-','-','-','8'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['|','k','b','f','[','-',']','.','b','.','|','.','b','.','[','-',']','h','b','.','|'],
['|','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','5','-','-','-','-','-','-','-','-','-','3']
]

const map23 = [
['1','-','-','-','-','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','i','|'],
['|','.','1','-',']','d','[','-','2','.','|','.','1','-',']','d','[','-','2','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','|','.','^','.','^','.','|','.','|','.','|','.','^','.','^','.','|','.','|'],
['|','.','|','.','_','.','_','.','|','.','|','.','|','.','_','.','_','.','|','.','|'],
['|','.','|','.','.','k','.','.','|','.','|','.','|','.','.','l','.','.','|','.','|'],
['|','.','|','.','[','-',']','.','|','.','|','.','|','.','[','-',']','.','|','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','4','-','-','-','-','-','3','.','|','.','4','-','-','-','-','-','3','.','|'],
['|','.','.','.','.','.','.','.','.','k','|','k','.','.','.','.','.','.','.','.','|'],
['|','.','1','-','-','-','-','-','2','.','|','.','1','-','-','-','-','-','2','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','|','.','[','-',']','.','|','.','|','.','|','.','[','-',']','.','|','.','|'],
['|','.','|','.','.','l','.','.','|','.','|','.','|','.','.','p','.','.','|','.','|'],
['|','.','|','.','^','.','^','.','|','.','|','.','|','.','^','.','^','.','|','.','|'],
['|','.','|','.','_','.','_','.','|','.','|','.','|','.','_','.','_','.','|','.','|'],
['|','.','|','.','.','.','.','.','|','.','|','.','|','.','.','.','.','.','|','.','|'],
['|','.','4','-',']','.','[','-','3','.','|','.','4','-',']','d','[','-','3','.','|'],
['|','h','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','f','|'],
['4','-','-','-','-','-','-','-','-','-','5','-','-','-','-','-','-','-','-','-','3']
]

const map24 = [
['1','-','-','-','-','-','-','-','-','-','7','-','-','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','p','|'],
['|','.','1','-','-','-','-','-',']','.','_','.','[','-','-','-','-','-','2','.','|'],
['|','.','|','k','.','.','.','.','.','.','t','.','.','.','.','.','.','k','|','.','|'],
['|','.','|','.','1','-','-','-',']','.','^','.','[','-','-','-','2','.','|','.','|'],
['|','.','|','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','|','.','|'],
['|','.','|','.','|','.','1','-','-','-','5','-','-','-','2','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','l','.','.','.','.','.','.','|','.','|','.','|','.','|'],
['|','.','_','.','_','.','|','.','1','-','-','-','2','.','|','.','_','.','_','.','|'],
['|','.','.','.','.','.','|','.','|','.','k','.','|','.','|','.','.','.','.','.','|'],
['6','-',']','d','[','-','8','.','|','.','b','.','|','.','6','-',']','d','[','-','8'],
['|','.','.','.','.','.','|','.','|','.','.','.','|','.','|','.','.','.','.','.','|'],
['|','.','^','.','^','.','|','.','4',']','d','[','3','.','|','.','^','.','^','.','|'],
['|','.','|','.','|','.','|','.','.','.','.','.','.','k','|','.','|','.','|','.','|'],
['|','.','|','.','|','.','6','-','-','-','7','-','-','-','8','.','|','.','|','.','|'],
['|','.','|','.','|','.','|','.','.','.','|','.','.','.','|','.','|','.','|','.','|'],
['|','.','|','.','_','.','_','.','b','.','_','.','b','.','_','.','_','.','|','.','|'],
['|','.','|','k','.','.','t','.','k','.','t','.','h','.','t','.','.','l','|','.','|'],
['|','.','4','-',']','.','^','.','b','.','^','.','b','.','^','.','[','-','3','.','|'],
['|','i','.','.','.','.','|','.','.','.','|','.','.','.','|','.','.','.','.','f','|'],
['4','-','-','-','-','-','5','-','-','-','5','-','-','-','5','-','-','-','-','-','3']
]

const map25 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map26 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map27 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map28 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map29 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map30 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map31 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map32 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map33 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map34 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map35 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map36 = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const mapboss = [
['1','-','-','-','-','-','-','-','7','-','-','-','7','-','-','-','-','-','-','-','2'],
['|',' ','.','.','.','.','.','.','_','.','l','.','_','.','.','.','.','.','.','.','|'],
['|','.','^','.','1','-',']','.','t','.','b','.','t','k','[','-','2','.','^','.','|'],
['|','.','_','.','_','.','.','.','^','.','h','.','^','.','.','.','_','.','_','.','|'],
['|','.','.','.','.','.','1','-','3','d','^','d','4','-','2','.','.','.','.','.','|'],
['|','.','b','.','1','-','3','.','.','.','|','.','.','.','4','-','2','.','b','.','|'],
['|','.','.','.','|','.','.','.','[','-','+','-',']','.','.','.','|','.','.','.','|'],
['|','.','^','.','|','.','^','.','.','.','|','.','.','.','^','.','|','.','^','.','|'],
['|','.','_','.','|','.','|','.','^','.','_','.','^','.','|','.','|','.','_','.','|'],
['|','.','.','.','|','.','|','.','|','.','p','.','|','.','|','.','|','.','.','.','|'],
['|','.','b','.','|','.','|','.','4','-','-','-','3','.','|','.','|','.','b','.','|'],
['|','.','.','.','|','.','|','.','.','.','f','.','.','.','|','.','|','.','.','.','|'],
['|','.','^','.','|','.','4','-','-','-','-','-','-','-','3','.','|','.','^','.','|'],
['|','.','_','.','|','.','.','.','.','.','l','.','.','.','.','.','|','.','_','.','|'],
['|','.','.','.','|','.','b','.','1',']','d','[','2','.','b','.','|','.','.','.','|'],
['|','.','b','.','|','.','.','.','|','.','.','.','|','.','.','.','|','.','b','.','|'],
['|','.','.','.','4','-','-','-','3','.','^','.','4','-','-','-','3','.','.','.','|'],
['|','.','^','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','^','.','|'],
['|','.','4',']','.','b','.','[',']','.','_','.','[',']','.','b','.','[','3','.','|'],
['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|'],
['4','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','3']
]

const map_holder = [
map1,  map2,  map3,  map4,  map5,  map6, 
map7,  map8,  map9,  map10, map11, map12,
map13, map14, map15, map16, map17, map18,
map19, map20, map21, map22, map23, map24,
map25, map26, map27, map28, map29, map30,
map31, map32, map33, map34, map35, map36,
mapboss
]

function createImage(src) {
    const image=new Image()
    image.src=src
    return image
}

function map_creation(level){
map_holder[level-1].forEach((row, i) => {
    row.forEach((symbol, j) => {
      switch (symbol) {
        case 'd':
          doors.push(
            new Door({
              position: {
                x: Door.width * j,
                y: Door.height * i
              },
              image: createImage('./img/boundaries/DoorHor.png')
              })
          )
          break
        case 't':
          doors.push(
            new Door({
              position: {
                x: Door.width * j,
                y: Door.height * i
              },
              image: createImage('./img/boundaries/DoorVer.png')
              })
          )
          break
        case '-':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/pipeHorizontal.png')
            })
          )
          break
        case '|':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/pipeVertical.png')
            })
          )
          break
        case '1':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/pipeCorner1.png')
            })
          )
          break
        case '2':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/pipeCorner2.png')
            })
          )
          break
        case '3':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/pipeCorner3.png')
            })
          )
          break
        case '4':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/pipeCorner4.png')
            })
          )
          break
        case 'b':
          boundaries.push(
            new Boundary({
              position: {
                x: Boundary.width * j,
                y: Boundary.height * i
              },
              image: createImage('./img/boundaries/block.png')
            })
          )
          break
        case '[':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/capLeft.png')
            })
          )
          break
        case ']':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/capRight.png')
            })
          )
          break
        case '_':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/capBottom.png')
            })
          )
          break
        case '^':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/capTop.png')
            })
          )
          break
        case '+':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/pipeCross.png')
            })
          )
          break
        case '5':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/pipeConnectorTop.png')
            })
          )
          break
        case '6':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/pipeConnectorRight.png')
            })
          )
          break
        case '7':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/pipeConnectorBottom.png')
            })
          )
          break
        case '8':
          boundaries.push(
            new Boundary({
              position: {
                x: j * Boundary.width,
                y: i * Boundary.height
              },
              image: createImage('./img/boundaries/pipeConnectorLeft.png')
            })
          )
          break
        case '.':
          palets.push(
            new Palet({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
        case 'p':
          powerups.push(
            new Powerup({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
        case 'h':
          heartups.push(
            new Heartup({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
        case 'f':
          fastups.push(
            new Fastup({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
        case 'i':
          inviups.push(
            new Inviup({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
        case 'k':
          keyvers.push(
            new KeyVer({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
        case 'l':
          teleports.push(
            new Teleport({
              position: {
                x: j * Boundary.width + Boundary.width / 2,
                y: i * Boundary.height + Boundary.height / 2
              }
            })
          )
          break
      }
    })
  })
}

map_creation(level)

function circleColliderWithRectangle({circle, rectangle}){
  const padding = Boundary.width/2 - circle.radius - 1
  return (
        circle.position.y - circle.radius + circle.velocity.y <= rectangle.position.y + rectangle.height + padding &&
        circle.position.x + circle.radius + circle.velocity.x >= rectangle.position.x - padding &&
        circle.position.y + circle.radius + circle.velocity.y >= rectangle.position.y - padding &&
        circle.position.x - circle.radius + circle.velocity.x <= rectangle.position.x + rectangle.width + padding
    )
}

let animationId
function animate() {
    animationId = requestAnimationFrame(animate)
    c.clearRect(0,0,canvas.width,canvas.height)

    if (time===0 && palets.length!==0) {
      if (boundaries.length!==0) {
        if (palets.length>7) palets.splice(0,6)
        ghosts.splice(0,1)
        powerups.splice(0,1)
        teleports.splice(0,1)
        keyvers.splice(0,1)
        heartups.splice(0,1)
        inviups.splice(0,1)
        fastups.splice(0,1)
        player.black = true
        doors.splice(0,3)
        boundaries.splice(0,3)
      } else {
            palets.splice(0,7)
            levelMid.innerHTML='GAME OVER!'
            levelMid.setAttribute("class", "unselectable mid")
            cancelAnimationFrame(animationId)
      }
    }
    
    if (palets.length===0) {
      score+=time/1000
      time = 0
      timeEl.innerHTML= '<br>' + 'TIME: 00'+ time/1000
      if (score < 10) scoreEl.innerHTML='SCORE: 000'+ score
      else if (score < 100) scoreEl.innerHTML='SCORE: 00'+ score
      else if (score < 1000) scoreEl.innerHTML='SCORE: 0'+ score
      else scoreEl.innerHTML='SCORE: '+ score

      ghosts.splice(0,1)
      powerups.splice(0,1)
      teleports.splice(0,1)
      keyvers.splice(0,1)
      heartups.splice(0,1)
      inviups.splice(0,1)
      fastups.splice(0,1)
      player.black = true
      if (boundaries.length!==0) {
        doors.splice(0,3)
        boundaries.splice(0,3)
        if (level===37) level+=1  
        else fake_value=true
      }
      else if (level===38){
        levelMid.innerHTML = 'YOU WIN!!!'
        levelMid.setAttribute("class", "unselectable mid")
        cancelAnimationFrame(animationId)
      }
      else if (fake_value===true) {
        level+=1  
        if (level>=10) levelEl.innerHTML='LEVEL: '+ level
        else levelEl.innerHTML='LEVEL: 0'+ level
        if (level<10) levelMid.innerHTML='LEVEL '+ level
        else levelMid.innerHTML='LEVEL '+ level
        levelMid.setAttribute("class", "unselectable mid")
        setTimeout(() => {
          time = 150000
          timeEl.innerHTML= '<br>' + 'TIME: '+ time/1000
          map_creation(level)
          if (level<=6)
          ghosts.push (
            new Ghost({
              position: 
              {x:Boundary.width * 19 + Boundary.width/2,
              y:Boundary.height + Boundary.height/2},
              velocity: {x:-Ghost.speed,y:0}
            }),
            new Ghost({
              position: 
              {x:Boundary.width * 19 + Boundary.width/2,
              y:Boundary.height * 19 + Boundary.height/2},
              velocity: {x:-Ghost.speed,y:0}
            }),
            new Ghost({
              position: 
              {x:Boundary.width + Boundary.width/2,
              y:Boundary.height * 19 + Boundary.height/2},
              velocity: {x:Ghost.speed,y:0}
            })
                )
            else if (level===12)
            ghosts.push (
              new Ghost({
                position: 
                {x:Boundary.width * 19 + Boundary.width/2,
                y:Boundary.height + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 19 + Boundary.width/2,
                y:Boundary.height * 19 + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width + Boundary.width/2,
                y:Boundary.height * 19 + Boundary.height/2},
                velocity: {x:Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 17 + Boundary.width/2,
                y:Boundary.height * 3 + Boundary.height/2},
                velocity: {x:Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 17 + Boundary.width/2,
                y:Boundary.height * 17 + Boundary.height/2},
                velocity: {x:Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 3 + Boundary.width/2,
                y:Boundary.height * 17 + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              })
                  )
             else if (level===15 || level===16)
            ghosts.push (
              new Ghost({
                position: 
                {x:Boundary.width * 19 + Boundary.width/2,
                y:Boundary.height + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 19 + Boundary.width/2,
                y:Boundary.height * 19 + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width + Boundary.width/2,
                y:Boundary.height * 19 + Boundary.height/2},
                velocity: {x:Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 17 + Boundary.width/2,
                y:Boundary.height * 3 + Boundary.height/2},
                velocity: {x:0,y:Ghost.speed}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 17 + Boundary.width/2,
                y:Boundary.height * 17 + Boundary.height/2},
                velocity: {x:0,y:-Ghost.speed}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 3 + Boundary.width/2,
                y:Boundary.height * 17 + Boundary.height/2},
                velocity: {x:0,y:Ghost.speed}
              })
                  )
            else if (level<=24)
            ghosts.push (
              new Ghost({
                position: 
                {x:Boundary.width * 19 + Boundary.width/2,
                y:Boundary.height + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 19 + Boundary.width/2,
                y:Boundary.height * 19 + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width + Boundary.width/2,
                y:Boundary.height * 19 + Boundary.height/2},
                velocity: {x:Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 17 + Boundary.width/2,
                y:Boundary.height * 3 + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 17 + Boundary.width/2,
                y:Boundary.height * 17 + Boundary.height/2},
                velocity: {x:-Ghost.speed,y:0}
              }),
              new Ghost({
                position: 
                {x:Boundary.width * 3 + Boundary.width/2,
                y:Boundary.height * 17 + Boundary.height/2},
                velocity: {x:Ghost.speed,y:0}
              })
                  )
              else
              ghosts.push (
                new Ghost({
                  position: 
                  {x:Boundary.width * 19 + Boundary.width/2,
                  y:Boundary.height + Boundary.height/2},
                  velocity: {x:-Ghost.speed,y:0}
                }),
                new Smart({
                  position: 
                  {x:Boundary.width * 19 + Boundary.width/2,
                  y:Boundary.height * 19 + Boundary.height/2},
                  velocity: {x:-Smart.speed,y:0}
                }),
                new Ghost({
                  position: 
                  {x:Boundary.width + Boundary.width/2,
                  y:Boundary.height * 19 + Boundary.height/2},
                  velocity: {x:Ghost.speed,y:0}
                })
                    )
            player.position.x = Boundary.width + Boundary.width/2
            player.position.y = Boundary.height + Boundary.height/2
            player.rotation = 0
            lastKeyws = ''
            lastKeyad = ''
            player.velocity.x = 0
            player.velocity.y = 0
            player.black = false
            levelMid.setAttribute("class", "unselectable hide")
        }, 1000)
        fake_value=false
      }
    }

    if (keys.w.pressed && lastKeyws === 'w') {
        for (let i =0; i<boundaries.length; i++) {
            const boundary = boundaries[i]
            if (circleColliderWithRectangle({circle: {...player, velocity:{x:0,y:-5}}, rectangle: boundary})
            ){
                player.velocity.y=0
                break
            } else {
                player.velocity.y=-player.speed
            }
        }

    } if (keys.a.pressed && lastKeyad === 'a') {
        for (let i =0; i<boundaries.length; i++) {
            const boundary = boundaries[i]
            if (circleColliderWithRectangle({circle: {...player, velocity:{x:-5,y:0}}, rectangle: boundary})
            ){
                player.velocity.x=0
                break
            } else {
                player.velocity.x=-player.speed
            }
        }

    } if (keys.s.pressed && lastKeyws === 's') {
        for (let i =0; i<boundaries.length; i++) {
            const boundary = boundaries[i]
            if (circleColliderWithRectangle({circle: {...player, velocity:{x:0,y:5}}, rectangle: boundary})
            ){
                player.velocity.y=0
                break
            } else {
                player.velocity.y=player.speed
            }
        }

    } if (keys.d.pressed && lastKeyad === 'd') {
        for (let i =0; i<boundaries.length; i++) {
            const boundary = boundaries[i]
            if (circleColliderWithRectangle({circle: {...player, velocity:{x:5,y:0}}, rectangle: boundary})
            ){
                player.velocity.x=0
                break
            } else {
                player.velocity.x=player.speed
            }
        }
        
    }
    
    if (player.velocity.x!=0 && player.velocity.y!=0){
        switch(lastKey){
            case 'w':
                lastKeyad = ''
                break
            case 'a':
                lastKeyws = ''
                break
            case 's':
                lastKeyad = ''
                break
            case 'd':
                lastKeyws = ''
                break
        }
    }

    for (let i = powerups.length-1; 0 <= i; i--) {
      const powerup = powerups[i]
      powerup.draw()
      if (Math.hypot(powerup.position.x - player.position.x, powerup.position.y - player.position.y) < powerup.radius + player.radius) {
        powerups.splice(i,1)
        score += 10
            if (score < 10)
              scoreEl.innerHTML='SCORE: 000'+ score
            else if (score < 100)
              scoreEl.innerHTML='SCORE: 00'+ score
            else if (score < 1000)
              scoreEl.innerHTML='SCORE: 0'+ score
            else scoreEl.innerHTML='SCORE: '+ score
        ghosts.forEach(ghost => {
          ghost.scared_points = true
          ghost.scared = true
          setTimeout(() => {
            ghost.scared = false
            setTimeout(() => {
              ghost.scared = true
              setTimeout(() => {
                ghost.scared = false
                setTimeout(() => {
                  ghost.scared = true
                  setTimeout(() => {
                    ghost.scared = false
                    setTimeout(() => {
                      ghost.scared = true
                      setTimeout(() => {
                        ghost.scared_points = false
                        ghost.scared = false
                      }, 250)
                    }, 250)
                  }, 250)
                }, 250)
              }, 250)
            }, 250)
          }, 3500)
        })
      }
    }

for (let i = heartups.length-1; 0 <= i; i--) {
      const heartup = heartups[i]
      heartup.draw()
      if (Math.hypot(heartup.position.x - player.position.x, heartup.position.y - player.position.y) < heartup.radius + player.radius) {
        heartups.splice(i,1)
        lives+=1
        if (lives < 10) livesEl.innerHTML='<br>' + '\xa0\xa0\xa0' + 'LIVES: '+ lives
        else livesEl.innerHTML='<br>' + '\xa0' + 'LIVES: '+ lives
        score += 10
            if (score < 10)
              scoreEl.innerHTML='SCORE: 000'+ score
            else if (score < 100)
              scoreEl.innerHTML='SCORE: 00'+ score
            else if (score < 1000)
              scoreEl.innerHTML='SCORE: 0'+ score
            else scoreEl.innerHTML='SCORE: '+ score
      }
    }

for (let i = inviups.length-1; 0 <= i; i--) {
      const inviup = inviups[i]
      inviup.draw()
      if (Math.hypot(inviup.position.x - player.position.x, inviup.position.y - player.position.y) < inviup.radius + player.radius) {
        inviups.splice(i,1)
        score += 10
            if (score < 10)
              scoreEl.innerHTML='SCORE: 000'+ score
            else if (score < 100)
              scoreEl.innerHTML='SCORE: 00'+ score
            else if (score < 1000)
              scoreEl.innerHTML='SCORE: 0'+ score
            else scoreEl.innerHTML='SCORE: '+ score
          player.invincible_points = true
              player.invincible = true
              setTimeout(() => {
                player.invincible = false
                setTimeout(() => {
                  player.invincible = true
                  setTimeout(() => {
                    player.invincible = false
                    setTimeout(() => {
                      player.invincible = true
                      setTimeout(() => {
                        player.invincible = false
                        setTimeout(() => {
                          player.invincible = true
                          setTimeout(() => {
                            player.invincible_points = false
                            player.invincible = false
                          }, 250)
                        }, 250)
                      }, 250)
                    }, 250)
                  }, 250)
                }, 250)
              }, 8500)
      }
    }

    for (let i = fastups.length-1; 0 <= i; i--) {
      const fastup = fastups[i]
      fastup.draw()
      if (Math.hypot(fastup.position.x - player.position.x, fastup.position.y - player.position.y) < fastup.radius + player.radius) {
        
        player.speed=10
        if (player.velocity.x===0) player.position.y -= 5
        if (player.velocity.y===0) player.position.x -= 5
        fastups.splice(i,1)
        
        score += 10
            if (score < 10)
              scoreEl.innerHTML='SCORE: 000'+ score
            else if (score < 100)
              scoreEl.innerHTML='SCORE: 00'+ score
            else if (score < 1000)
              scoreEl.innerHTML='SCORE: 0'+ score
            else scoreEl.innerHTML='SCORE: '+ score
            setTimeout(() => {
              player.speed=5
            }, 3000)
      }
    }

    for (let i = keyvers.length-1; 0 <= i; i--) {
      const keyver = keyvers[i]
      keyver.draw()
      if (Math.hypot(keyver.position.x - player.position.x, keyver.position.y - player.position.y) < keyver.radius + player.radius) {
        
        keyvers.splice(i,1)
        doors.splice(0,1)
      }
    }

    for (let i = teleports.length-1; 0 <= i; i--) {
      const teleport = teleports[i]
      teleport.draw()
        if (Math.hypot(teleport.position.x - player.position.x, teleport.position.y - player.position.y) < teleport.radius + player.radius) {
          if (teleports[i].recharge_points===false) {
          if (i==0) {
            player.position.x=teleports[i+1].position.x
            player.position.y=teleports[i+1].position.y
          } else {
            player.position.x=teleports[i-1].position.x
            player.position.y=teleports[i-1].position.y
          }
            teleports.forEach(teleportt => {
              teleportt.recharge_points = true
              teleportt.recharge = true
              setTimeout(() => {
                teleportt.recharge = false
                setTimeout(() => {
                  teleportt.recharge = true
                  setTimeout(() => {
                    teleportt.recharge = false
                    setTimeout(() => {
                      teleportt.recharge = true
                      setTimeout(() => {
                        teleportt.recharge = false
                        setTimeout(() => {
                          teleportt.recharge = true
                          setTimeout(() => {
                            teleportt.recharge_points = false
                            teleportt.recharge = false
                          }, 250)
                        }, 250)
                      }, 250)
                    }, 250)
                  }, 250)
                }, 250)
              }, 3500)
            })
          }    
        } 
    }

    if (!player.invincible_points) {
      for (let i = ghosts.length-1; 0 <= i; i--) {
        const ghost = ghosts[i]
        if (Math.hypot(ghost.position.x - player.position.x, ghost.position.y - player.position.y) < ghost.radius + player.radius){
          if (ghost.scared_points) {
            ghosts.splice(i,1)
            score += 10
              if (score < 10)
                scoreEl.innerHTML='SCORE: 000'+ score
              else if (score < 100)
                scoreEl.innerHTML='SCORE: 00'+ score
              else if (score < 1000)
                scoreEl.innerHTML='SCORE: 0'+ score
              else scoreEl.innerHTML='SCORE: '+ score
          }else {
            if (lives) {
              player.invincible_points = true
              player.invincible = true
              setTimeout(() => {
                player.invincible = false
                setTimeout(() => {
                  player.invincible = true
                  setTimeout(() => {
                    player.invincible = false
                    setTimeout(() => {
                      player.invincible = true
                      setTimeout(() => {
                        player.invincible = false
                        setTimeout(() => {
                          player.invincible = true
                          setTimeout(() => {
                            player.invincible_points = false
                            player.invincible = false
                          }, 250)
                        }, 250)
                      }, 250)
                    }, 250)
                  }, 250)
                }, 250)
              }, 500)
              lives-=1
              if (lives < 10) livesEl.innerHTML='<br>' + '\xa0\xa0\xa0' + 'LIVES: '+ lives
              else livesEl.innerHTML='<br>' + '\xa0' + 'LIVES: '+ lives
              player.position.x = Boundary.width + Boundary.width/2
              player.position.y = Boundary.height + Boundary.height/2
              player.rotation = 0
              lastKeyws = ''
              lastKeyad = ''
              player.velocity.x = 0
              player.velocity.y = 0
            }
            else time=0}
    }}}

    for (let i = palets.length-1; 0 <= i; i--) {
        const palet = palets[i]
        palet.draw()

        if (Math.hypot(palet.position.x - player.position.x, palet.position.y - player.position.y) < palet.radius + player.radius){
            palets.splice(i,1)
            score += 1
            if (score < 10)
              scoreEl.innerHTML='SCORE: 000'+ score
            else if (score < 100)
              scoreEl.innerHTML='SCORE: 00'+ score
            else if (score < 1000)
              scoreEl.innerHTML='SCORE: 0'+ score
            else scoreEl.innerHTML='SCORE: '+ score
        }
    }
   
    boundaries.forEach((boundary) => {
        boundary.draw()

        if (circleColliderWithRectangle({circle: player, rectangle: boundary})
        ){
            player.velocity.x = 0
            player.velocity.y = 0
        }
    })

    doors.forEach((door) => {
      door.draw()

      if (circleColliderWithRectangle({circle: player, rectangle: door})
      ){
          player.velocity.x = 0
          player.velocity.y = 0
      }
  })

    player.update()
    
    ghosts.forEach(ghost => {
      ghost.update()

      if (ghost.velocity.x > 0) 
      {ghost.eyesws = 0 
      ghost.eyesad = 2}

      else if (ghost.velocity.x < 0) 
      {ghost.eyesws = 0
      ghost.eyesad = -2}

      else if (ghost.velocity.y > 0) 
      {ghost.eyesws = 2 
      ghost.eyesad = 0}

      else if (ghost.velocity.y < 0) 
      {ghost.eyesws = -2 
      ghost.eyesad = 0}

      const collisions = []
      boundaries.forEach(boundary => {
        if (!collisions.includes('right') && circleColliderWithRectangle({circle: {...ghost, velocity:{x:ghost.speed,y:0}}, rectangle: boundary})){
          collisions.push('right')
        } if (!collisions.includes('left') && circleColliderWithRectangle({circle: {...ghost, velocity:{x:-ghost.speed,y:0}}, rectangle: boundary})){
          collisions.push('left')
        } if (!collisions.includes('down') && circleColliderWithRectangle({circle: {...ghost, velocity:{x:0,y:ghost.speed}}, rectangle: boundary})){
          collisions.push('down')
        } if (!collisions.includes('up') && circleColliderWithRectangle({circle: {...ghost, velocity:{x:0,y:-ghost.speed}}, rectangle: boundary})){
          collisions.push('up')
        }
      })
      if (collisions.length > ghost.prevCollisions.length){
      ghost.prevCollisions = collisions
      } if (JSON.stringify(collisions) !== JSON.stringify(ghost.prevCollisions)){
        if (ghost.velocity.x>0) ghost.prevCollisions.push('right')
        else if (ghost.velocity.x<0) ghost.prevCollisions.push('left')
        else if (ghost.velocity.y<0) ghost.prevCollisions.push('up')
        else if (ghost.velocity.y>0) ghost.prevCollisions.push('down')
        const pathways = ghost.prevCollisions.filter(collision => {
          return !collisions.includes(collision)
        })
        const direction = pathways [Math.floor(Math.random()*pathways.length)]
        switch(direction){
          case 'down':
            ghost.velocity.y = ghost.speed
            ghost.velocity.x = 0
            break
          case 'up':
            ghost.velocity.y = -ghost.speed
            ghost.velocity.x = 0
            break
          case 'right':
            ghost.velocity.y = 0
            ghost.velocity.x = ghost.speed
            break
          case 'left':
            ghost.velocity.y = 0
            ghost.velocity.x = -ghost.speed
            break
        }
        ghost.prevCollisions = []
      }
    })
    
    if (player.velocity.x > 0) player.rotation = 0
    else if (player.velocity.x < 0) player.rotation = Math.PI
    else if (player.velocity.y > 0) player.rotation = Math.PI/2
    else if (player.velocity.y < 0) player.rotation = Math.PI*1.5
    
    if (animationId%60===0 && time > 0){
      time -= 1000
      if (time/1000>=100)
      timeEl.innerHTML='<br>'+'TIME: '+ time/1000
      else if (time/1000>=10)
      timeEl.innerHTML='<br>'+'TIME: 0'+ time/1000
      else
      timeEl.innerHTML='<br>'+'TIME: 00'+ time/1000
    }  
}

function start() {
  setTimeout(() => {
    scoreEl.setAttribute("class", "unselectable")
    timeEl.setAttribute("class", "unselectable")
    levelEl.setAttribute("class", "reverse unselectable")
    livesEl.setAttribute("class", "reverse unselectable")
    levelMid.setAttribute("class", "unselectable mid")
  setTimeout(() => {
    animate()
    levelMid.setAttribute("class", "unselectable hide")
  }, 1000)
  }, 250);
}

start();

addEventListener('keydown',({key})=>{
    switch(key){
        case 'w':
        case "ArrowUp":
            up();
            break
        case 'a':
        case "ArrowLeft":
            left();
            break
        case 's':
        case "ArrowDown":
            down();
            break
        case 'd':
        case "ArrowRight":
            right();
            break
    }
});

function left(){
  keys.a.pressed = true
  lastKeyad = 'a'
  lastKey = 'a'
}

function right(){
  keys.d.pressed = true
  lastKeyad = 'd'
  lastKey = 'd'
}

function up(){
  keys.w.pressed = true
  lastKeyws = 'w'
  lastKey = 'w'
}

function down(){
  keys.s.pressed = true
  lastKeyws = 's'
  lastKey = 's'
}